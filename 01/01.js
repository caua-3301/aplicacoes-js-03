/*
Crie um novo projeto com uma p√°gina que tenha 1 campo de texto e 1 campo do tipo "datetime-local" e 1 bot√£o com o r√≥tulo "Adicionar". O usu√°rio deve digitar o nome de um evento e selecionar em que hor√°rio esse evento (um objeto com os valores selecionados) vai ocorrer. Ao clicar em adicionar, deve ser mostrado na tela a lista de eventos em ordem cronol√≥gica, utilizem o m√©todo sort de array. Para facilitar o trabalho de mostrar os eventos na tela, veja o m√©todo replaceChildren()
*/

/*Variaveis de interesse*/
let eventos = [];


let dataHora = document.querySelector("#selct-data");
let eventoDigitado = document.querySelector("#event");
let exibirEventos = document.querySelector("#events");
let formulario = document.querySelector("#insert")

/*Classe que vai contruir um objeto com as informa√ß√µes do evenyo*/
class objetoEvento {
    constructor(data, horario, descEvento) {
        this.data = data;
        this.horario = horario;
        this.descEvento = descEvento;
    }
}

/*Ativando a fun√ßo√£o*/
formulario.addEventListener("submit", (e) => {
    e.preventDefault();
    
    /*Para fins de formata√ß√£o, separando a hora da data*/
    let data = dataHora.value.slice(0, 10);
    let horario = dataHora.value.slice(11, 16);

    /*Para praticlar classes, crinando sempre um novo objeto para cada conjunto de informa√ß√µes*/
    let novoObjeto = new objetoEvento(data, horario, eventoDigitado.value);

    /*Tirar d√∫vida, tags*/
    let novoEvento = document.createElement('p');
    novoEvento.innerHTML = `<div class="my-child">
        <p class="even"><strong>Evento:</strong> ${novoObjeto.descEvento} </p>
        <p class="info">‚è∞: <strong>${novoObjeto.horario}</strong></p>
        <p class="info">üóìÔ∏è: <strong>${novoObjeto.data}</strong></p>
    </div>`;

    /*Adicionando em um array*/
    eventos = [...eventos, novoEvento];

    eventos.sort();

    exibirEventos.replaceChildren(...eventos);

    /*Fins est√°ticos*/
    dataHora.value = null;
    eventoDigitado.value = "";
    dataHora.focus();
})
